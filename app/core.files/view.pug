.side-container
    .side-heading.area-round
        h3.nowrap.m-0(style="max-width: 220px; overflow: hidden; text-overflow: ellipsis;")
            span {{title}}
        .ml-auto
        .btn.btn-white.btn-sm.mr-1((click)="refresh();")
            i.fa-solid.fa-refresh.text-blue
        .btn.btn-white.btn-sm.mr-1((click)="create(null, 'folder');")
            i.fa-solid.fa-folder-plus.text-blue
        .btn.btn-white.btn-sm.mr-1((click)="create(null, 'file');")
            i.fa-solid.fa-plus.text-blue
        .btn.btn-white.btn-sm((click)="upload();")
            i.fa-solid.fa-upload.text-blue

    .side-body.area-round
        mat-tree.file-tree([dataSource]="dataSource", [treeControl]="treeControl")
            mat-tree-node(*matTreeNodeDef="let node", matTreeNodePadding="", matTreeNodePaddingIndent="16px", (click)="open(node)")
                i.tree-icon.fa-regular.fa-file-lines.mr-2
                div(style="flex: auto;") 
                    span(*ngIf="!node.editable", (click)="node.editable = true; $event.stopPropagation(); scope.render()") {{node.name}}
                    input.form-control.form-control-sm([(ngModel)]="node.rename", placeholder="{{node.type.split('.')[1]}} name", (keyup.enter)="move(node);", *ngIf="node.editable", (click)="$event.stopPropagation();")
                i.icon-action.fa-solid.fa-download((click)="download(node); $event.stopPropagation();")
                i.icon-action.fa-solid.fa-trash-can((click)="delete(node); $event.stopPropagation();")

            mat-tree-node(*matTreeNodeDef="let node; when: isNew", matTreeNodePadding="", matTreeNodePaddingIndent="16px", (click)="open(node)")
                i.tree-icon.fa-regular.fa-file.mr-2(*ngIf="node.type == 'new.file'")
                i.tree-icon.fa-regular.fa-folder.mr-2(*ngIf="node.type == 'new.folder'")
                div(style="flex: auto;") 
                    input.form-control.form-control-sm([(ngModel)]="node.name", placeholder="{{node.type.split('.')[1]}} name", (keyup.enter)="create(node);")
                i.icon-action-always.fa-solid.fa-xmark((click)="delete(node); $event.stopPropagation();")
                i.icon-action-always.fa-solid.fa-check((click)="create(node); $event.stopPropagation();")

            mat-tree-node(*matTreeNodeDef="let node; when: isFolder", matTreeNodePadding="", matTreeNodeToggle="", matTreeNodePaddingIndent="16px")
                i.tree-icon.mr-2([ngClass]="treeControl.isExpanded(node) ? 'fa-regular fa-folder-open' : 'fa-solid fa-folder'")
                div(style="flex: auto;")
                    span(*ngIf="!node.editable", (click)="node.editable = true; $event.stopPropagation(); scope.render()") {{node.name}}
                    input.form-control.form-control-sm([(ngModel)]="node.rename", placeholder="{{node.type.split('.')[1]}} name", (keyup.enter)="move(node);", *ngIf="node.editable", (click)="$event.stopPropagation();")
                
                i.icon-action.fa-solid.fa-trash-can((click)="delete(node); $event.stopPropagation();")
                i.icon-action.fa-solid.fa-arrow-up-from-bracket((click)="upload(node); $event.stopPropagation();")
                i.icon-action.fa-solid.fa-download((click)="download(node); $event.stopPropagation();")
                i.icon-action.fa-solid.fa-folder-plus((click)="create(node, 'folder'); $event.stopPropagation();")
                i.icon-action.fa-solid.fa-plus((click)="create(node, 'file'); $event.stopPropagation();")

    ngx-loading([show]="loading")